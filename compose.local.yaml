volumes:
  db_data:
    driver: local
  kafka-data:
    driver: local
  zookeeper-data:
    driver: local
  debezium-data:
    driver: local

networks:
  g-bank:
    name: g-bank
    driver: bridge
    external: true

services:
  backend:
    build:
      dockerfile: core.Dockerfile
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - DATABASE_URL=jdbc:postgresql://postgres:5432/g-bank
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_DURATION=${JWT_ACCESS_DURATION}
      - JWT_REFRESH_DURATION=${JWT_REFRESH_DURATION}
    networks:
      - g-bank
    depends_on:
      - postgres

  event-handler:
    build:
      dockerfile: event-handler.Dockerfile
    ports:
      - "8081:8081"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - KAFKA_BROKER_ID=${KAFKA_BROKER_ID}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - DATABASE_URL=jdbc:postgresql://postgres:5432/g-bank
    networks:
      - g-bank
    depends_on:
      - kafka
      - postgres

  postgres:
    image: postgres:16.3
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    volumes:
      - 'db_data:/var/lib/postgresql/data'
    networks:
      - g-bank
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - '2181:2181'
    environment:
      - ZOOKEEPER_CLIENT_PORT=${ZOOKEEPER_CLIENT_PORT}
      - ZOOKEEPER_TICK_TIME=${ZOOKEEPER_TICK_TIME}
    networks:
      - g-bank
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=${KAFKA_BROKER_ID}
      - KAFKA_ZOOKEEPER_CONNECT=${KAFKA_ZOOKEEPER_CONNECT}
      - KAFKA_ADVERTISED_LISTENERS=${KAFKA_ADVERTISED_LISTENERS}
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
      - KAFKA_INTER_BROKER_LISTENER_NAME=LOCAL
    networks:
      - g-bank
    volumes:
      - kafka-data:/var/lib/kafka/data

  debezium:
    image: debezium/connect:3.0.0.Final
    depends_on:
      - kafka
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=${DEBEZIUM_GROUP_ID}
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    user: root
    #    command:
    #      - bash
    #      - -c
    #      - "cd /on-startup; ls; ./run.sh"
    networks:
      - g-bank
    volumes:
      - debezium-data:/debezium/data
      - ./conf/:/on-startup/
